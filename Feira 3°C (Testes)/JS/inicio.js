// Sele√ß√£o do conte√∫do principal onde ser√° trocado o texto
const content = document.getElementById("content");

// Objeto com os conte√∫dos din√¢micos
const pages = {
  Linguagens: {
    title: "Linguagens de Programa√ß√£o",
    description: "Explore as principais linguagens para web e software: HTML, CSS, JavaScript, Python e mais!",
    media: "<img src='img/linguagens.png' alt='Linguagens'>"
  },
  Html: {
  title: "HTML",
  description: `
    HTML (HyperText Markup Language) √© a base da constru√ß√£o de p√°ginas web. Ele define a estrutura e o conte√∫do, organizando texto, imagens, links e outros elementos de forma hier√°rquica e sem√¢ntica.
  `,
  media: `
  <img src='static/Estrutura HTML.png' alt='HTML'>
  <div class="texto-extra">
    
    <h3>üåê Principais Tags:</h3>
    <ul>
      <li><code>&lt;h1&gt; a &lt;h6&gt;</code>: t√≠tulos de diferentes n√≠veis</li>
      <li><code>&lt;p&gt;</code>: par√°grafos</li>
      <li><code>&lt;a&gt;</code>: links</li>
      <li><code>&lt;img&gt;</code>: imagens</li>
      <li><code>&lt;div&gt;</code> e <code>&lt;section&gt;</code>: blocos de organiza√ß√£o</li>
      <li><code>&lt;table&gt;</code>: cria tabelas (com <code>&lt;tr&gt;</code>, <code>&lt;td&gt;</code>, <code>&lt;th&gt;</code>)</li>
      <li><code>&lt;form&gt;</code>: constr√≥i formul√°rios para entrada de dados</li>
      <li><code>&lt;input&gt;</code>, <code>&lt;textarea&gt;</code>, <code>&lt;button&gt;</code>: campos interativos</li>
    </ul>

    <h3>üìå Curiosidade:</h3>
    <ul>
      HTML n√£o √© uma linguagem de programa√ß√£o: ele n√£o "executa", apenas estrutura. O HTML5 foi lan√ßado em 2014 e √© atualizado continuamente! Existe um modo ‚Äúquirks‚Äù em navegadores que emula comportamentos antigos de HTML mal escrito. Sites est√°ticos podem ser hospedados gratuitamente com servi√ßos como <b>GitHub Pages</b>.
    </ul>

    <h3>üß† Dica de ouro:</h3>
    <ul>
      <div class="cards-wrapper">
        <div class="flip-card">
          <div class="flip-card-inner">
            <div class="flip-card-front">
              <h3>Dica-1</h3>
            </div>
            <div class="flip-card-back">
              <p>N√£o aninhe blocos como <code>&lt;p&gt;</code> dentro de <code>&lt;ul&gt;</code>, isso quebra sem√¢ntica.</p>
            </div>
          </div>
        </div>

        <div class="flip-card">
          <div class="flip-card-inner">
            <div class="flip-card-front">
              <h3>Dica-2</h3>
            </div>
            <div class="flip-card-back">
              <p>Use atributos <code>alt=""</code> nas imagens para acessibilidade e SEO</p>
            </div>
          </div>
        </div>

        <div class="flip-card">
          <div class="flip-card-inner">
            <div class="flip-card-front">
              <h3>Dica-3</h3>
            </div>
            <div class="flip-card-back">
              <p>Considere ferramentas como Emmet para acelerar escrita de HTML</p>
            </div>
          </div>
        </div>

        <div class="flip-card">
          <div class="flip-card-inner">
            <div class="flip-card-front">
              <h3>Dica-4</h3>
            </div>
            <div class="flip-card-back">
              <p>Indicar o idioma da p√°gina com <code>&lt;html lang="pt-br"&gt;</code> ajuda mecanismos de busca e leitores de tela a entenderem seu conte√∫do. Isso melhora a acessibilidade e o SEO.</p>
            </div>
          </div>
        </div>

        <div class="flip-card">
          <div class="flip-card-inner">
            <div class="flip-card-front">
              <h3>Dica-5</h3>
            </div>
            <div class="flip-card-back">
              <p>Prefira tags <strong>sem√¢nticas</strong> ao inv√©s de gen√©ricas: <code>&lt;main&gt;</code> &gt; <code>&lt;div&gt;</code></p>
            </div>
          </div>
        </div>

        <div class="flip-card">
          <div class="flip-card-inner">
            <div class="flip-card-front">
              <h3>Dica-6</h3>
            </div>
            <div class="flip-card-back">
              <p>Use <code>aria-label</code> em bot√µes, links e imagens para facilitar a navega√ß√£o de pessoas com defici√™ncia visual. Exemplo: <code>&lt;button aria-label="Fechar menu"&gt;‚úñ&lt;/button&gt;</code></p>
            </div>
          </div>
        </div>

        <div class="flip-card">
          <div class="flip-card-inner">
            <div class="flip-card-front">
              <h3>Dica-7</h3>
            </div>
            <div class="flip-card-back">
              <p>Evite excesso de <code>&lt;div&gt;</code> e use tags sem√¢nticas como <code>&lt;main&gt;</code>, <code>&lt;section&gt;</code>, <code>&lt;article&gt;</code>. Isso melhora a leitura do c√≥digo e a experi√™ncia em navegadores e ferramentas assistivas.</p>
            </div>
          </div>
        </div>
      </div>
    </ul>

    <h3>üîñ Tags menos conhecidas mas poderosas:</h3>
    <ul>
      <li><code>&lt;details&gt;</code> e <code>&lt;summary&gt;</code>: criam blocos colaps√°veis</li>
      <li><code>&lt;mark&gt;</code>: destaca texto com marca√ß√£o</li>
      <li><code>&lt;progress&gt;</code>: barra de progresso visual</li>
      <li><code>&lt;meter&gt;</code>: exibe valor com medidor (tipo bateria!)</li>
      <li><code>&lt;time&gt;</code>: indica hora/data com significado temporal</li>
    </ul>

    <h3>üìé Extra para os devs:</h3>
    <ul>
      <li>Ferramentas como o <a href="https://validator.w3.org/" target="_blank">W3C Validator</a> ajudam a manter o HTML limpo</li>
      <li>Combinar HTML com ARIA roles melhora muito a acessibilidade</li>
      <li>Voc√™ pode estilizar tudo com CSS ou at√© integrar com frameworks tipo Tailwind, Bootstrap</li>
      <li>O primeiro site da hist√≥ria foi criado por Tim Berners-Lee em 1991 e ainda est√° online: <a href="http://info.cern.ch/" target="_blank">info.cern.ch</a></li>
    </ul>

  </div>
  `
},

CSS: {
  title: "CSS",
  description: `
    <h2>üé® Introdu√ß√£o ao CSS</h2>
    <p>CSS (Cascading Style Sheets) √© a camada de design da web. Ele separa a estrutura (HTML) do estilo, permitindo que voc√™ defina cores, espa√ßamentos, anima√ß√µes, layouts responsivos e muito mais. O CSS √© o que torna a web bonita e funcional.</p>
    
    <img src="static/Estrutura CSS.png" alt="Estrutura CSS">

    <h3>üåê Principais Propriedades de CSS</h3>
    <ul>
      <li><code>color</code>: define a cor do texto</li>
      <li><code>background-color</code>: define o fundo</li>
      <li><code>margin</code> e <code>padding</code>: espa√ßamentos externos e internos</li>
      <li><code>border</code>: bordas com estilos e cores</li>
      <li><code>display</code>: define o comportamento visual (block, inline, flex, grid)</li>
      <li><code>position</code>: controla o posicionamento (static, relative, absolute, fixed)</li>
      <li><code>transition</code> e <code>animation</code>: criam efeitos suaves e interativos</li>
    </ul>

    <h3>üß† Curiosidades</h3>
    <ul>
      <li>O CSS foi proposto pela primeira vez em 1994 por H√•kon Wium Lie.</li>
      <li>Hoje existem v√°rias vers√µes, sendo o CSS3 a mais usada.</li>
      <li>Voc√™ pode escrever CSS diretamente no HTML, em arquivos separados ou at√© usando pr√©-processadores como Sass.</li>
      <li>O seletor universal <code>*</code> estiliza todos os elementos da p√°gina de uma vez!</li>
      <li>CSS pode at√© ser usado para criar desenhos completos, s√≥ com c√≥digo!</li>
    </ul>

    <h3>üß† Dicas de Ouro</h3>
    <div class="cards-wrapper">
      <div class="flip-card">
        <div class="flip-card-inner">
          <div class="flip-card-front">
            <h3>Dica-1</h3>
          </div>
          <div class="flip-card-back">
            <p>Use vari√°veis CSS com <code>:root</code> para manter cores e tamanhos consistentes.</p>
          </div>
        </div>
      </div>

      <div class="flip-card">
        <div class="flip-card-inner">
          <div class="flip-card-front">
            <h3>Dica-2</h3>
          </div>
          <div class="flip-card-back">
            <p>Evite usar apenas <code>px</code>; experimente <code>em</code>, <code>rem</code> e <code>%</code> para responsividade.</p>
          </div>
        </div>
      </div>

      <div class="flip-card">
        <div class="flip-card-inner">
          <div class="flip-card-front">
            <h3>Dica-3</h3>
          </div>
          <div class="flip-card-back">
            <p>O seletor <code>:not()</code> te ajuda a excluir elementos espec√≠ficos ao estilizar.</p>
          </div>
        </div>
      </div>
    </div>

    <h3>üîñ Tags menos conhecidas mas poderosas</h3>
    <ul>
      <li><code>clip-path</code>: cria formas recortadas com CSS</li>
      <li><code>aspect-ratio</code>: define propor√ß√µes de elementos visualmente</li>
      <li><code>scroll-snap</code>: fixa elementos em rolagem suave</li>
      <li><code>grid-template-areas</code>: nomeia partes do grid com facilidade</li>
      <li><code>filter</code>: aplica efeitos como blur, brilho, contraste e sombra em imagens ou divs</li>
    </ul>

    <h3>üìé Extra para Devs</h3>
    <ul>
      <li>Use o DevTools do navegador para testar estilos direto na p√°gina.</li>
      <li>Frameworks como Tailwind ou Bootstrap podem acelerar o design.</li>
      <li>Sites como <a href="https://css-tricks.com/" target="_blank">CSS-Tricks</a> e <a href="https://flexboxfroggy.com/" target="_blank">Flexbox Froggy</a> s√£o √≥timos para aprender brincando.</li>
    </ul>
  `,
},

JavaScript: {
  title: "JavaScript",
  description: `
    <h2>üöÄ Introdu√ß√£o ao JavaScript</h2>
    <p>JavaScript √© a linguagem que d√° vida √† web! Criado por <strong>Brendan Eich</strong> em 1995, ele permite criar anima√ß√µes, intera√ß√µes, l√≥gica de jogos e at√© aplica√ß√µes completas.</p>

    <img src="static/Estrutura JS.png" alt="Imagem estrutura JavaScript">

    <h3>üß© Principais Recursos</h3>
    <ul>
      <li><code>DOM Manipulation</code>: altera elementos HTML dinamicamente</li>
      <li><code>Eventos</code>: responde a cliques, teclas e a√ß√µes do usu√°rio</li>
      <li><code>Fun√ß√µes</code>: blocos reutiliz√°veis de c√≥digo</li>
      <li><code>Objetos</code>: estrutura de dados com propriedades e m√©todos</li>
      <li><code>Arrays</code>: listas de valores</li>
      <li><code>Promises</code> e <code>async/await</code>: controle de opera√ß√µes ass√≠ncronas</li>
    </ul>

    <h3>üìö Curiosidades</h3>
    <ul>
      <li>JavaScript foi criado em apenas 10 dias!</li>
      <li>Apesar do nome, JavaScript n√£o tem rela√ß√£o direta com Java.</li>
      <li>Hoje √© usado tanto no front-end quanto no back-end (com Node.js).</li>
    </ul>

    <h3>üí° Dicas Ninja</h3>
    <div class="cards-wrapper">
      <div class="flip-card">
        <div class="flip-card-inner">
          <div class="flip-card-front"><h3>Dica-1</h3></div>
          <div class="flip-card-back"><p>Use <code>const</code> e <code>let</code> em vez de <code>var</code> para evitar bugs de escopo.</p></div>
        </div>
      </div>
      <div class="flip-card">
        <div class="flip-card-inner">
          <div class="flip-card-front"><h3>Dica-2</h3></div>
          <div class="flip-card-back"><p>Evite manipular diretamente o DOM ‚Äî prefira frameworks como React ou Vue.</p></div>
        </div>
      </div>
      <div class="flip-card">
        <div class="flip-card-inner">
          <div class="flip-card-front"><h3>Dica-3</h3></div>
          <div class="flip-card-back"><p>Use <code>===</code> ao inv√©s de <code>==</code> para evitar convers√µes inesperadas.</p></div>
        </div>
      </div>
    </div>

    <h3>üîß Tags e T√©cnicas Avan√ßadas</h3>
    <ul>
      <li><code>template literals</code>: strings com interpola√ß√£o usando <code>\`\${valor}\`</code></li>
      <li><code>destructuring</code>: extrai dados de objetos e arrays com facilidade</li>
      <li><code>spread/rest</code>: manipula cole√ß√µes de forma elegante</li>
      <li><code>closures</code>: fun√ß√µes que lembram o escopo onde foram criadas</li>
      <li><code>tagged templates</code>: manipula√ß√£o avan√ßada de strings</li>
    </ul>

    <h3>üìé Extra para Devs</h3>
    <ul>
      <li>Use <strong>DevTools</strong> para debugar e testar c√≥digo em tempo real.</li>
      <li>Frameworks como React, Vue e Angular aceleram o desenvolvimento.</li>
      <li>Sites como <a href="https://javascript.info/" target="_blank">JavaScript.info</a> e <a href="https://developer.mozilla.org/pt-BR/docs/Web/JavaScript" target="_blank">MDN Web Docs</a> s√£o √≥timos para aprender.</li>
    </ul>
  `,
},

Anima√ß√µes: {
  title: "As melhores anima√ß√µes",
  description: `
    <h2>üéûÔ∏è Introdu√ß√£o √†s Anima√ß√µes</h2>
    <p>As anima√ß√µes web s√£o respons√°veis por dar fluidez, emo√ß√£o e interatividade aos elementos da p√°gina. Elas podem ser feitas com <strong>CSS</strong>, <strong>JavaScript</strong> ou usando bibliotecas como <strong>GSAP</strong> e <strong>Anime.js</strong>.</p>

    <img src="static/Estrutura Anima√ß√£o.png" alt="Imagem de anima√ß√µes web">

    <h3>üé® Tipos de Anima√ß√µes</h3>
    <ul>
      <li><strong>Transi√ß√µes CSS</strong>: mudan√ßas suaves entre estados (hover, foco, etc.)</li>
      <li><strong>Keyframes CSS</strong>: anima√ß√µes complexas com m√∫ltiplos estados</li>
      <li><strong>JavaScript</strong>: controle total sobre tempo, l√≥gica e intera√ß√µes</li>
      <li><strong>Canvas & SVG</strong>: anima√ß√µes gr√°ficas e vetoriais</li>
      <li><strong>Web Animations API</strong>: anima√ß√µes nativas com controle avan√ßado</li>
    </ul>

    <h3>üìö Curiosidades</h3>
    <ul>
      <li>O CSS3 trouxe anima√ß√µes nativas sem precisar de JavaScript.</li>
      <li>GSAP √© usado por grandes marcas como Google e Nike.</li>
      <li>Anime.js permite animar qualquer coisa ‚Äî de SVGs a objetos JS!</li>
    </ul>

    <h3>üí° Dicas Visuais</h3>
    <div class="cards-wrapper">
      <div class="flip-card">
        <div class="flip-card-inner">
          <div class="flip-card-front"><h3>Dica-1</h3></div>
          <div class="flip-card-back"><p>Use <code>transform</code> e <code>opacity</code> para anima√ß√µes suaves e perform√°ticas.</p></div>
        </div>
      </div>
      <div class="flip-card">
        <div class="flip-card-inner">
          <div class="flip-card-front"><h3>Dica-2</h3></div>
          <div class="flip-card-back"><p>Evite animar <code>width</code> e <code>height</code> ‚Äî prefira <code>scale()</code>.</p></div>
        </div>
      </div>
      <div class="flip-card">
        <div class="flip-card-inner">
          <div class="flip-card-front"><h3>Dica-3</h3></div>
          <div class="flip-card-back"><p>Combine <code>@keyframes</code> com <code>animation-delay</code> para efeitos em sequ√™ncia.</p></div>
        </div>
      </div>
    </div>

    <h3>üîß T√©cnicas Avan√ßadas</h3>
    <ul>
      <li><code>@keyframes</code>: define etapas da anima√ß√£o</li>
      <li><code>animation-timing-function</code>: controla a velocidade (ease, linear, etc.)</li>
      <li><code>requestAnimationFrame()</code>: anima√ß√µes JS sincronizadas com o navegador</li>
      <li><code>Element.animate()</code>: Web Animations API para controle direto</li>
      <li><code>GSAP</code>: anima√ß√µes com timeline, controle e revers√£o</li>
    </ul>

    <h3>üìé Extra para Devs</h3>
    <ul>
      <li>Use <strong>Codepen</strong> e <strong>GitHub</strong> para explorar exemplos prontos.</li>
      <li>Ferramentas como <a href="https://animate.style/" target="_blank">Animate.css</a> aceleram o processo.</li>
      <li>Explore <a href="https://www.sliderrevolution.com/design/cool-javascript-animations/" target="_blank">Slider Revolution</a> para anima√ß√µes JS avan√ßadas.</li>
    </ul>
  `,
},

Utilidades: {
  title: "Utilidades",
  description: `
    <h2>üß∞ Utilidades com HTML, CSS e JavaScript</h2>
    <p>Al√©m de conte√∫do visual, sites podem oferecer funcionalidades √∫teis como busca, previs√£o do tempo, mapas interativos, calend√°rios, notifica√ß√µes e muito mais. Tudo isso √© poss√≠vel com a combina√ß√£o poderosa de HTML, CSS e JavaScript.</p>

    <img src="static/Utilidades.png" alt="Imagem de utilidades web">

    <h3>üîç Exemplos de Funcionalidades</h3>
    <ul>
      <li><strong>Barra de busca</strong>: permite encontrar conte√∫do rapidamente</li>
      <li><strong>Previs√£o do tempo</strong>: integra√ß√£o com APIs meteorol√≥gicas</li>
      <li><strong>Mapas interativos</strong>: usando Google Maps ou Leaflet</li>
      <li><strong>Calend√°rio</strong>: agendamento e exibi√ß√£o de datas</li>
      <li><strong>Modo escuro/claro</strong>: altern√¢ncia de temas com CSS e JS</li>
      <li><strong>Notifica√ß√µes</strong>: alertas personalizados com JavaScript</li>
      <li><strong>Valida√ß√£o de formul√°rios</strong>: garante dados corretos</li>
    </ul>

    <h3>üìö Curiosidades</h3>
    <ul>
      <li>√â poss√≠vel criar uma calculadora funcional apenas com HTML, CSS e JS.</li>
      <li>Sites modernos usam APIs para buscar dados em tempo real (como clima ou localiza√ß√£o).</li>
      <li>Voc√™ pode criar um sistema de login b√°sico com armazenamento local usando <code>localStorage</code>.</li>
    </ul>

    <h3>üí° Dicas Funcionais</h3>
    <div class="cards-wrapper">
      <div class="flip-card">
        <div class="flip-card-inner">
          <div class="flip-card-front"><h3>Dica-1</h3></div>
          <div class="flip-card-back"><p>Use <code>fetch()</code> para consumir APIs e trazer dados din√¢micos.</p></div>
        </div>
      </div>
      <div class="flip-card">
        <div class="flip-card-inner">
          <div class="flip-card-front"><h3>Dica-2</h3></div>
          <div class="flip-card-back"><p>Combine <code>input[type="date"]</code> com JS para criar calend√°rios interativos.</p></div>
        </div>
      </div>
      <div class="flip-card">
        <div class="flip-card-inner">
          <div class="flip-card-front"><h3>Dica-3</h3></div>
          <div class="flip-card-back"><p>Use <code>navigator.geolocation</code> para obter a localiza√ß√£o do usu√°rio.</p></div>
        </div>
      </div>
    </div>

    <h3>üîß T√©cnicas Avan√ßadas</h3>
    <ul>
      <li><code>localStorage</code> e <code>sessionStorage</code>: armazenam dados no navegador</li>
      <li><code>Web APIs</code>: como Weather API, Maps API, News API</li>
      <li><code>Event Listeners</code>: capturam a√ß√µes do usu√°rio</li>
      <li><code>Regex</code>: valida√ß√£o avan√ßada de campos</li>
      <li><code>Service Workers</code>: permitem funcionalidades offline</li>
    </ul>

    <h3>üìé Extra para Devs</h3>
    <ul>
      <li>Explore <a href="https://rapidapi.com/" target="_blank">RapidAPI</a> para encontrar APIs √∫teis.</li>
      <li>Use <strong>DevTools</strong> para testar funcionalidades em tempo real.</li>
      <li>Sites como <a href="https://codepen.io/" target="_blank">CodePen</a> e <a href="https://github.com/solygambas/html-css-javascript-projects" target="_blank">GitHub Projects</a> t√™m exemplos incr√≠veis.</li>
    </ul>
  `,
},

Adicionar: {
  title: "Coisas √öteis para se adicionar em seu site",
  description: `
    <h2>üß™ Elementos e Funcionalidades Maneiras</h2>
    <p>Seu site pode ser muito mais do que texto e imagens. Com HTML, CSS e JavaScript, voc√™ pode adicionar recursos interativos, visuais marcantes e utilidades que surpreendem o visitante.</p>

    <img src="static/Utilidades.png" alt="Elementos √∫teis para sites">

    <h3>üß∞ Utilidades que fazem diferen√ßa</h3>
    <ul>
      <li><strong>Modo escuro autom√°tico</strong>: muda com base no hor√°rio ou prefer√™ncia do navegador</li>
      <li><strong>Gerador de frases aleat√≥rias</strong>: motiva√ß√µes, curiosidades ou piadas</li>
      <li><strong>Calculadora embutida</strong>: √∫til para sites de finan√ßas, sa√∫de ou estudos</li>
      <li><strong>Rel√≥gio em tempo real</strong>: digital, anal√≥gico ou com fusos diferentes</li>
      <li><strong>Contador regressivo</strong>: para eventos, lan√ßamentos ou desafios</li>
      <li><strong>Barra de progresso</strong>: mostra quanto falta para concluir uma leitura ou tarefa</li>
      <li><strong>Notifica√ß√µes visuais</strong>: alertas com anima√ß√µes ou sons</li>
    </ul>

    <h3>üìö Curiosidades que engajam</h3>
    <ul>
      <li>Voc√™ pode usar <code>&lt;details&gt;</code> e <code>&lt;summary&gt;</code> para criar se√ß√µes dobr√°veis sem JS.</li>
      <li>Com <code>SpeechSynthesis</code>, o navegador pode ‚Äúfalar‚Äù textos em voz alta.</li>
      <li>√â poss√≠vel criar um sistema de conquistas com <code>localStorage</code> e √≠cones desbloque√°veis.</li>
    </ul>

    <h3>üí° Dicas Criativas</h3>
    <div class="cards-wrapper">
      <div class="flip-card">
        <div class="flip-card-inner">
          <div class="flip-card-front"><h3>Dica-1</h3></div>
          <div class="flip-card-back"><p>Use <code>&lt;canvas&gt;</code> para criar desenhos, jogos ou efeitos visuais.</p></div>
        </div>
      </div>
      <div class="flip-card">
        <div class="flip-card-inner">
          <div class="flip-card-front"><h3>Dica-2</h3></div>
          <div class="flip-card-back"><p>Adicione um bot√£o de ‚Äúvoltar ao topo‚Äù com anima√ß√£o suave usando <code>scrollTo()</code>.</p></div>
        </div>
      </div>
      <div class="flip-card">
        <div class="flip-card-inner">
          <div class="flip-card-front"><h3>Dica-3</h3></div>
          <div class="flip-card-back"><p>Crie um easter egg ativado por combina√ß√£o de teclas ou clique secreto.</p></div>
        </div>
      </div>
    </div>

    <h3>üîñ Tags e APIs √∫teis</h3>
    <ul>
      <li><code>&lt;progress&gt;</code>: barra de progresso visual</li>
      <li><code>&lt;meter&gt;</code>: medidor de valor (tipo bateria)</li>
      <li><code>navigator.geolocation</code>: obt√©m localiza√ß√£o do usu√°rio</li>
      <li><code>Notification API</code>: envia alertas nativos do navegador</li>
      <li><code>Clipboard API</code>: copia texto com um clique</li>
    </ul>

    <h3>üìé Extra para Devs</h3>
    <ul>
      <li>Explore <a href="https://uiverse.io/" target="_blank">Uiverse</a> para copiar componentes prontos</li>
      <li>Use <a href="https://webutility.io/" target="_blank">WebUtility.io</a> para testar e gerar recursos √∫teis</li>
      <li>Veja <a href="https://prismic.io/blog/css-animation-examples" target="_blank">39 exemplos de anima√ß√µes CSS</a> para se inspirar</li>
    </ul>
  `,
  media: "<img src='img/utilidades.png' alt='Elementos interativos'>"
},
};

// Navega√ß√£o principal via links do content-nav
document.querySelectorAll(".content-nav a").forEach(link => {
  link.addEventListener("click", (event) => {
    event.preventDefault();
    const page = link.getAttribute("data-page");

    const selectedPage = pages[page] || {
      title: "Erro",
      description: "P√°gina n√£o encontrada.",
      media: ""
    };

    content.innerHTML = `
      <h2>${selectedPage.title}</h2>
      <p>${selectedPage.description}</p>
      ${selectedPage.media}
    `;
  });
});

// Zoom
const overlay = document.createElement("div");
overlay.id = "img-overlay";
overlay.innerHTML = "<img src=''>";
document.body.appendChild(overlay);

const overlayImg = overlay.querySelector("img");
let zoomLevel = 1;

// Abrir e fechar o overlay
document.addEventListener("click", (e) => {
  const img = e.target.closest("img");

  if (img && !overlay.contains(img)) {
    overlayImg.src = img.src;
    zoomLevel = 1;
    overlayImg.style.transform = "scale(0.5)";
    overlay.classList.add("active");
  }

  if (e.target === overlay) {
    overlay.classList.remove("active");
    overlayImg.src = "";
    zoomLevel = 1;
    overlayImg.style.transform = "scale(1)";
  }
});

// Zoom com scroll
overlayImg.addEventListener("wheel", (e) => {
  e.preventDefault();
  zoomLevel += e.deltaY > 0 ? -0.1 : 0.1;
  zoomLevel = Math.min(Math.max(zoomLevel, 1), 3);
  overlayImg.style.transform = `scale(${zoomLevel})`;
});


// Menu (hamb√∫rguer)
const menuBtn = document.getElementById("menuBtn");
const closeMenu = document.getElementById("closeMenu");
const menu = document.getElementById("menu");

// Abre o menu
menuBtn.addEventListener("click", (event) => {
  event.preventDefault();
  menu.classList.add("open");
  menuBtn.style.display = "none";
});

// Fecha o menu
closeMenu.addEventListener("click", (event) => {
  event.preventDefault();
  menu.classList.remove("open");
  setTimeout(() => {
    menuBtn.style.display = "block";
  }, 300);
});

// Fecha o menu ao clicar em qualquer link
document.querySelectorAll("#menu a").forEach(link => {
  link.addEventListener("click", () => {
    menu.classList.remove("open");
    setTimeout(() => {
      menuBtn.style.display = "block";
    }, 300);
  });
});


const elements = document.querySelectorAll(".scroll-animation");

const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
        if (entry.isIntersecting) {
            entry.target.classList.add("visible");
        }
    });
}, { threshold: 0.2 });

elements.forEach(element => observer.observe(element));

const clickSound = new Audio("sounds/click.mp3");

document.querySelectorAll("#menuBtn").forEach(element => {
    element.addEventListener("click", () => {
        clickSound.play();
    });
});

clickSound.volume = 0.7;

const dotButton = document.getElementById("dotButton");
const hiddenImage = document.getElementById("hiddenImage");
const spotifyPlayer = document.getElementById("spotifyPlayer");
const easterEgg = document.getElementById("easterEgg");

// Fun√ß√£o para ocultar todos os elementos do easter egg
function fecharEasterEgg() {
    hiddenImage.style.display = "none";
    spotifyPlayer.style.display = "none";
    dotButton.style.display = "block"; // Mostra novamente o bot√£o "."
}

// Evento de clique no bot√£o "."
dotButton.addEventListener("click", (event) => {
    event.stopPropagation();
    dotButton.style.display = "none"; 
    hiddenImage.style.display = "block"; 
});

// Evento de clique na imagem
hiddenImage.addEventListener("click", (event) => {
    event.stopPropagation(); // Impede que o clique feche o easter egg
    hiddenImage.style.display = "none"; 
    spotifyPlayer.style.display = "block";
});

// Evento que fecha o easter egg ao clicar fora dele
document.addEventListener("click", (event) => {
    if (!easterEgg.contains(event.target)) { 
        fecharEasterEgg();
    }
});

// Palavras Dinamicas
const palavras =  ['Incrivel', 'Insana', 'de outro Mundo', 'Construtiva', 'Magnifica', 'Inesquec√≠vel', 'Divertida', 'Maneira'];
const palavraEl = document.getElementById('palavra-dinamica');
let palavraAtual = 0;

function digitaTexto(texto,i = 0) {
    if (i <= texto.length) {
        palavraEl.textContent = texto.slice(0, i);
        setTimeout(() => digitaTexto(texto, i + 1), 80);
    }
}

function alteraPalavra() {
    const palavra = palavras[palavraAtual];
    digitaTexto(palavra);
    palavraAtual = (palavraAtual + 1) % palavras.length;
}

alteraPalavra();
setInterval(alteraPalavra, 3000);

// --- In√≠cio do Widget de Previs√£o do Tempo ---
const API_KEY = "091a5278f57f023fbcf6853d179be3c2";
const OPENCAGE_KEY = "0c9e4c20211e4c7d8adef9ed31bf5f9d";
let currentCity = "Sao Paulo";

// Mapeamento manual de bairros espec√≠ficos
const bairroOverrides = {
  "Avenida Manoel Bol√≠var": "Jardim Caromb√©",
  // Adicione outras ruas conhecidas aqui
};

const sunBtn = document.getElementById("sun-btn");
const weatherPopup = document.getElementById("weather-popup");
const cityEl = document.getElementById("city");
const tempEl = document.getElementById("temp");
const descEl = document.getElementById("desc");
const windEl = document.getElementById("wind");
const forecastLink = document.getElementById("full-forecast-link");
const searchBtn = document.getElementById("searchBtn");
const cityInput = document.getElementById("cityInput");

// Caixa de sugest√µes
const suggestionBox = document.createElement("ul");
Object.assign(suggestionBox.style, {
  position: "absolute",
  top: "100%",
  right: "0",
  background: "#333",
  color: "white",
  borderRadius: "4px",
  padding: "5px 0",
  marginTop: "4px",
  listStyle: "none",
  maxHeight: "160px",
  overflowY: "auto",
  zIndex: "1000",
  width: "100%",
});
suggestionBox.id = "suggestions";
document.getElementById("search-bar").style.position = "relative";
document.getElementById("search-bar").appendChild(suggestionBox);

// --- Fun√ß√µes principais ---
async function getWeatherData(input) {
  const isCep = /^\d{5}-?\d{3}$/.test(input) || /^\d{4,5}$/.test(input);
  const url = isCep
    ? `https://api.openweathermap.org/data/2.5/weather?zip=${input},BR&appid=${API_KEY}&units=metric&lang=pt_br`
    : `https://api.openweathermap.org/data/2.5/weather?q=${input}&appid=${API_KEY}&units=metric&lang=pt_br`;

  try {
    const response = await fetch(url);
    if (!response.ok) throw new Error(`Erro: ${response.status}`);
    return await response.json();
  } catch (error) {
    console.error("Erro ao buscar clima:", error.message);
    updateWeatherUI(null);
    return null;
  }
}

async function getWeatherDataByCoords(lat, lon) {
  try {
    const url = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&units=metric&lang=pt_br&appid=${API_KEY}`;
    const response = await fetch(url);
    if (!response.ok) throw new Error(`Erro: ${response.status}`);
    return await response.json();
  } catch (error) {
    console.error("Erro por coordenadas:", error.message);
    updateWeatherUI(null);
    return null;
  }
}

function updateWeatherUI(data) {
  if (!data) return;

  const condition = data.weather[0].main.toLowerCase();
  const description = data.weather[0].description;
  let iconHTML = `<img src="gifs/padrao.gif" alt="Clima atual" width="60">`;

  if (condition.includes("clear")) iconHTML = `<img src="gifs/sol.gif" alt="Ensolarado">`;
  else if (condition.includes("rain")) iconHTML = `<img src="gifs/chuva.gif" alt="Chuvoso">`;
  else if (condition.includes("cloud")) iconHTML = `<img src="gifs/nublado.gif" alt="Nublado">`;
  else if (condition.includes("thunderstorm")) iconHTML = `<img src="gifs/tempestade.gif" alt="Tempestade">`;
  else if (["mist", "fog", "haze", "smoke"].some(x => condition.includes(x)))
    iconHTML = `<img src="static/nevoa.png" alt="Neblina">`;

  sunBtn.innerHTML = iconHTML;
  cityEl.textContent = `Cidade: ${data.name}`;
  tempEl.textContent = `Temperatura: ${Math.round(data.main.temp)}¬∞C`;
  descEl.textContent = `Condi√ß√£o: ${description.charAt(0).toUpperCase() + description.slice(1)}`;
  windEl.textContent = `Vento: ${data.wind.speed} m/s`;

  if (forecastLink && data.coord) {
    const { lat, lon } = data.coord;
    forecastLink.href = `https://openweathermap.org/weathermap?lat=${lat}&lon=${lon}&zoom=10`;
  }
}

// Comportamento do bot√£o do sol
sunBtn.addEventListener("click", async (event) => {
  event.stopPropagation();
  weatherPopup.classList.toggle("show");
  if (weatherPopup.classList.contains("show")) {
    const data = await getWeatherData(currentCity);
    updateWeatherUI(data);
  }
});

// Fecha popup ao clicar fora
document.addEventListener("click", (event) => {
  if (!weatherPopup.contains(event.target) && !sunBtn.contains(event.target)) {
    weatherPopup.classList.remove("show");
  }
});

// Lupa ativa a busca
searchBtn.addEventListener("click", () => {
  cityInput.classList.toggle("visible");
  searchBtn.classList.add("spin");
  setTimeout(() => {
    searchBtn.classList.remove("spin");
    cityInput.focus();
  }, 400);
});

// Autocomplete com override de bairro
cityInput.addEventListener("input", async () => {
  const query = cityInput.value.trim();
  suggestionBox.innerHTML = "";
  if (query.length < 3) return;

  const url = `https://api.opencagedata.com/geocode/v1/json?q=${encodeURIComponent(query)}&key=${OPENCAGE_KEY}&limit=5&language=pt&countrycode=br`;

  try {
    const res = await fetch(url);
    const data = await res.json();

    data.results.forEach(result => {
      const components = result.components;
      const rua = components.road || "";
      let bairro =
        components.suburb ||
        components.neighbourhood ||
        components.quarter ||
        components.hamlet ||
        components.village ||
        components.district ||
        "";

      if (bairroOverrides[rua]) {
        bairro = bairroOverrides[rua];
      }

      const cidade =
        components.city ||
        components.town ||
        components.municipality ||
        components.village ||
        "";

      const estado = components.state || "";
      const pais = components.country || "";
      const cep = components.postcode || "";

      let labelParts = [];
      if (bairro) labelParts.push(bairro);
      if (cidade) labelParts.push(cidade);
      if (estado) labelParts.push(estado);
      if (pais) labelParts.push(pais);
      if (cep) labelParts.push(`CEP ${cep}`);
      const label = labelParts.length > 0 ? labelParts.join(", ") : result.formatted;

      const lat = result.geometry.lat;
      const lon = result.geometry.lng;

      const item = document.createElement("li");
      item.textContent = `üìç ${label}`;
      Object.assign(item.style, {
        padding: "8px 12px",
        cursor: "pointer",
        borderBottom: "1px solid rgba(255,255,255,0.1)",
      });

      item.addEventListener("click", async () => {
        currentCity = label;
        suggestionBox.innerHTML = "";
        cityInput.value = "";
        weatherPopup.classList.add("show");
        const data = await getWeatherDataByCoords(lat, lon);
        updateWeatherUI(data);
      });

      suggestionBox.appendChild(item);
    });
  } catch (err) {
    console.error("Erro no autocomplete:", err);
  }
});

// Enter ativa busca direta
cityInput.addEventListener("keydown", async (e) => {
  if (e.key === "Enter") {
    const input = cityInput.value.trim();
    suggestionBox.innerHTML = "";
    if (input) {
      currentCity = input;
      const data = await getWeatherData(input);
      updateWeatherUI(data);
      cityInput.value = "";
      weatherPopup.classList.add("show");
    }
  }
});

// --- Curiosidades ---
const curiosidades = [
  "Polvos t√™m tr√™s cora√ß√µes e azul no sangue. üêô",
  "A banana √© uma fruta radioativa ‚Äî por causa do pot√°ssio! üçå",
  "Voc√™ sabia que o Google era chamado de BackRub em 1996?",
  "Caf√©s no Jap√£o podem cobrar pela companhia de gatos‚Ä¶ ou de corujas ü¶â",
  "Tem mais formas de baralhar cartas do que √°tomos no universo conhecido‚ô¶Ô∏è‚ô£Ô∏è.",
  "O emoji üí© foi adicionado ao Unicode em 2010. Revolu√ß√£o silenciosa.",
  "Voc√™ consegue lamber seu cotovelo? 1 em cada 100 tenta agora üëÖ",
  "Se voc√™ digitar 'do a barrel roll' no Google, algo m√°gico acontece ‚ÅâÔ∏è",
  "O barulho do sabre de luz em Star Wars foi feito com um projetor velho e TV anal√≥gica üì∫",
  "Desafio: escreva seu nome como se fosse um feiti√ßo de Harry Potter ü™Ñ",
  "Ironicamente, o inventor da l√¢mpada el√©trica n√£o curtia muito estar sem luz üí°",
  "Existe um buraco geogr√°fico na Fran√ßa chamado o vilarejo mais silencioso do mundo üï≥Ô∏è",
  "Quando o Hulk surgiu nas HQs em 1962, sua cor original era cinza. Mudaram para verde por causa de problemas na impress√£o",
  "√Ågua quente congela mais r√°pido que √°gua fria, parece mentira, mas √© o chamado Efeito Mpemba. Cientistas ainda debatem exatamente por qu√™!üßä",
  "Lulas gigantes t√™m olhos do tamanho de pratos de jantar chegam a medir at√© 27 cm de di√¢metro, os maiores olhos do reino animal ü¶ë",
  "Napole√£o tinha uma fobia de gatos, apesar de seu poder militar, ele era totalmente aterrorizado por gatos üêà",
  "O aroma de pizza ativa as mesmas √°reas do c√©rebro que o amor rom√¢ntico, √© por isso que √© quase imposs√≠vel resistir a uma fatia! üçï",
  "H√° mais formas de jogar xadrez do que √°tomos no universo, o n√∫mero de combina√ß√µes poss√≠veis passa dos 10‚Å¥‚Å∞, superando f√°cil qualquer tentativa humana de dominar tudo."
];

document.getElementById("btn-gerar").addEventListener("click", () => {
  const frase = curiosidades[Math.floor(Math.random() * curiosidades.length)];
  const resultado = document.getElementById("resultado");

  resultado.style.opacity = 0;
  resultado.innerText = frase;

  // Anima suavemente a opacidade
  setTimeout(() => {
    resultado.style.transition = "opacity 0.6s ease";
    resultado.style.opacity = 1;
  }, 50);
});


// Limpa o resultado ao clicar fora da caixa
document.addEventListener("click", (e) => {
  const resultado = document.getElementById("resultado");
  const randomBox = document.getElementById("caixa");

  // Se clicou fora do bot√£o ou da caixa, limpa o conte√∫do
  if (!randomBox.contains(e.target)) {
    resultado.innerText = "";
  }
});

// --- Tecla secreta ---
document.addEventListener("keydown", (e) => {
  if (e.key.toLowerCase() === "-") {
    document.body.classList.toggle("tema-escuro");
  }
});

const randomBox = document.getElementById("caixa");
const toggleBtn = document.getElementById("btn-aleatorio");

let recolhido = false;

toggleBtn.addEventListener("click", () => {
  recolhido = !recolhido;
  randomBox.classList.toggle("recolhido", recolhido);
  toggleBtn.textContent = recolhido ? "‚Ä∫" : "‚Äπ";
});
